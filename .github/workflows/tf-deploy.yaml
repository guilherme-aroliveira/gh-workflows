name: Terraform Workflow

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
      tfversion:
        required: true
        type: string
      github_user:
        required: true
        type: string
      repo:
        required: true
        type: string
      timeout_in_minutes:
        required: true
        type: string
      aws_bucket_name:
        required: true
        type: string
      aws_bucket_key:
        required: true
        type: string
      aws_dynamodb_table:
        required: true
        type: string
      aws_region:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up tfenv
      run: |
        git clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv
        ln -s ~/.tfenv/bin/* /usr/local/bin
        mkdir -p ~/.local/bin/
        . ~/.profile
        ln -s ~/.tfenv/bin/* ~/.local/bin
        which tfenv

    - name: Setup terraform
      run: |
        tfenv install ${{ inputs.tfversion }}
        tfenv use ${{ inputs.tfversion }}
        terraform version

    - name: terraform init
      id: init
      env:
        AWS_BUCKET_NAME: ${{ inputs.aws_bucket_name }} 
        AWS_BUCKET_KEY: ${{ inputs.aws_bucket_key }}
        AWS_DYNAMODB_TABLE: ${{ inputs.aws_dynamodb_table }}
        AWS_REGION : ${{ inputs.aws_region }}
      run: |
        terraform init -backend=true \
          -backend-config="bucket=${AWS_BUCKET_NAME}" \
          -backend-config="key=${AWS_BUCKET_KEY}" \
          -backend-config="dynamodb_table=${AWS_DYNAMODB_TABLE}" \
          -backend-config="region=${AWS_REGION}" \
          -backend-config="encrypt=true"
      if: github.ref == 'refs/heads/main'
      continue-on-error: false

    - name: terraform plan
      id: plan
      run: terraform plan -input=false -out plan
      if: github.ref == 'refs/heads/main'
      continue-on-error: false

    - name: Display Approval Prompt
      run: |
        while true; do 
          REPOS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/${{ inputs.github_user }}/repos" | jq -r '.[].name') 
            for REPO in $REPOS; do 
              WORKFLOWS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.repos/${{ inputs.github_user }}/${{ inputs.repo }}/actions/runs" | jq -r '.workflow_runs[] | select(.status=="in_progress") | .id') 
              for RUN_ID in $WORKFLOWS; do 
                STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ inputs.github_user }}/${{ inputs.repo }}/actions/runs/$RUN_ID/jobs" | jq -r '.jobs[] | select(.name=="Manual Approval") | .status') 
                if [ "$STATUS" == "completed" ]; then 
                  echo "Approval received for $REPO workflow run $RUN_ID. Proceeding with the next steps." 
                else 
                  echo "Waiting for approval on ${{ inputs.github_user }}/${{ inputs.repo }} workflow run $RUN_ID ..." 
                fi 
              done 
            done 
          sleep 60 
        done

    - name: Set Timeout
      run: |
        echo "Waiting for approval with a timeout of ${{ inputs.timeout_in_minutes }} minutes"
        timeout $(( ${{ inputs.timeout_in_minutes }} * 60 )) 

    - name: terraform apply
      id: apply
      run: terraform apply -auto-approve plan
      continue-on-error: false