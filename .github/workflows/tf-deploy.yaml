name: Terraform Workflow

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
      tfversion:
        required: true
        type: string
      github_user:
        required: true
        type: string
      repo:
        required: true
        type: string
      timeout_in_minutes:
        required: true
        type: string
    secrets:
      AWS_BUCKET_NAME:
        required: true
      AWS_BUCKET_KEY_NAME:
        required: true
      AWS_DYNAMODB_TABLE:
        required: true
      AWS_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true 

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up tfenv
      run: |
        git clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv
        ln -s ~/.tfenv/bin/* /usr/local/bin
        mkdir -p ~/.local/bin/
        . ~/.profile
        ln -s ~/.tfenv/bin/* ~/.local/bin
        which tfenv

    - name: Setup terraform
      run: |
        tfenv install ${{ inputs.tfversion }}
        tfenv use ${{ inputs.tfversion }}
        terraform version

    - name: terraform init
      id: init
      env:
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }} 
        AWS_BUCKET_KEY: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        AWS_DYNAMODB_TABLE: ${{ secrets.AWS_DYNAMODB_TABLE }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        terraform init -backend=true \
          -backend-config="bucket=${AWS_BUCKET_NAME}" \
          -backend-config="key=${AWS_BUCKET_KEY}" \
          -backend-config="dynamodb_table=${AWS_DYNAMODB_TABLE}" \
          -backend-config="region=${AWS_REGION}" \
          -backend-config="encrypt=true"
      if: github.ref == 'refs/heads/main'
      continue-on-error: false

    - name: terraform plan
      id: plan
      run: terraform plan -input=false -out plan
      if: github.ref == 'refs/heads/main'
      continue-on-error: false

    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: guilherme-aroliveira

    - name: terraform apply
      id: apply
      run: |
        echo deploying
        terraform apply -auto-approve plan
      continue-on-error: false