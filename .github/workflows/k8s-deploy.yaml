name: 'Kubernetes Deploy'

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
      cluster_env:
        required: true
        type: string
      namespace:
        required: true
        type: string
      chart_name:
        required: true
        type: string
      chart_version:
        required: true
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true
      ECR_REPOSITORY:
        required: true
      ROLE_TO_ASSUME:
        required: true

jobs:

  ecr-push:
    name: ECR 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Package the chart
      run:
        helm package ${{ inputs.chart_name }}

    - name: Login to AWS ECR
      run: |
        aws ecr get-login-password \
          --region ${{ secrets.AWS_REGION }} | helm registry login \
          --username AWS \
          --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Push the Helm chart
      run: helm push ${{ inputs.chart_name }}-${{ inputs.chart_version }}.tgz oci://${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/

    - name: Describe the Helm chart
      run: |
        aws ecr describe-images \
          --repository-name ${{ secrets.ECR_REPOSITORY }} \
          --region ${{ secrets.AWS_REGION }}

    - name: Install the Helm chart
      run: |
        aws eks update-kubeconfig --name eks-${{ inputs.cluster_env }}-cluster --region ${{ secrets.AWS_REGION }}
        helm install ${{ inputs.chart_name }} oci://${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ inputs.chart_name}} \ 
          --version ${{ inputs.chart_version }}
        echo "Check the installation"
        helm list -n ${{ inputs.namespace }}