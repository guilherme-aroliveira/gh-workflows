name: 'ECR Push'

on:
  workflow_call:
    inputs:
      jdk_version:
        description: 'The version of JDK to install'
        required: true
        type: string
    secrets:
      AWS_REGION: 
        required: true
      AWS_ACCOUNT_ID:
        required: true
      ROLE_TO_ASSUME:
        required: true
      ECR_REPOSITORY:
        required: true

jobs:

  ecr-push:
    name: ECR 
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install JDK
      run: |
        sudo apt-get update
        sudo apt-get openjdk-${{ inputs.jdk_version }}-jdk
        echo "Check for JDK version:" | java -version

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y curl 
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip   
        sudo ./aws/install --update
        aws --version

    - name: Configure aws credentials
      run: |
        export TEMP_CREDS=$(aws sts assume-role --role-arn ${{ secrets.ROLE_TO_ASSUME }} --role-session-name "GitHubActionsSession")
        export AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r '.Credentials.AccessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r '.Credentials.SecretAccessKey')
        export AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r '.Credentials.SessionToken')
    
    - name: Login to AWS ECR
      run: |
        aws ecr get-login-password \ 
          --region ${{ secrets.AWS_REGION }} | docker login \
          --username AWS \
          --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build Docker Image
      run: |
        REPOSITORY_URI = ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
        docker build -t $REPOSITORY_URI:/latest .

    - name: Tag Docker Image
      run: |
        REPOSITORY_URI = ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
        docker tag $REPOSITORY_URI:latest

    - name: Push Docker Image to ECR
      run: |
        REPOSITORY_URI = ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
        docker push $REPOSITORY_URI:latest